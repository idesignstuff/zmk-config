name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  matrix:
    runs-on: ubuntu-latest
    name: Determine build matrix
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install yaml2json
        run: python3 -m pip install remarshal
      - id: set-matrix
        name: Process build matrix
        run: |
          matrix=$(yaml2json build.yaml | jq -c .)
          echo "matrix=${matrix}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: matrix
    name: Build
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache west modules
        uses: actions/cache@v3
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('manifest-dir/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: West Init
        uses: zmkfirmware/zmk-build-arm-gcc-action@v0.1
        id: west-init
        with:
          command: init
          command-args: -l config
      - name: West Update
        uses: zmkfirmware/zmk-build-arm-gcc-action@v0.1
        id: west-update
        with:
          command: update
      - name: West Config Zephyr Base
        uses: zmkfirmware/zmk-build-arm-gcc-action@v0.1
        id: west-config
        with:
          command: config
          command-args: zephyr.base ../zephyr
      - name: Update CMAKE
        run: pip3 install --user -U cmake
      - name: West Build (${{ matrix.board }}-${{ matrix.shield }})
        uses: zmkfirmware/zmk-build-arm-gcc-action@v0.1
        id: west-build
        with:
          command: build
          command-args: -s zmk/app -b ${{ matrix.board }} -- ${{ matrix.shield != '' && format('-DSHIELD={0}', matrix.shield) || '' }} ${{ matrix.cmake-args != '' && matrix.cmake-args || '' }}
      - name: ${{ matrix.board }}-${{ matrix.shield }} DTS File
        if: always()
        run: |
          if [ -f "build/zephyr/${{ matrix.board }}.${{ matrix.shield }}.dts.pre.tmp" ]; then cat -n build/zephyr/${{ matrix.board }}.${{ matrix.shield }}.dts.pre.tmp; else cat -n build/zephyr/zephyr.dts; fi
      - name: ${{ matrix.board }}-${{ matrix.shield }} Kconfig file
        if: always()
        run: cat build/zephyr/.config | grep -v "^#" | grep -v "^$"
      - name: Rename artifacts
        if: ${{ matrix.shield != '' }}
        run: |
          mkdir build/artifacts
          if [ -f build/zephyr/zmk.uf2 ]
          then
            cp build/zephyr/zmk.uf2 "build/artifacts/${{ matrix.board }}-${{ matrix.shield }}-zmk.uf2"
          elif [ -f build/zephyr/zmk.hex ]
          then
            cp build/zephyr/zmk.hex "build/artifacts/${{ matrix.board }}-${{ matrix.shield }}-zmk.hex"
          fi
      - name: Archive (${{ matrix.board }}-${{ matrix.shield }})
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: build/artifacts
