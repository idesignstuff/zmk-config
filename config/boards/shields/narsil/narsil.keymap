/*
  * Copyright (c) 2024 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  *
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// #include <dt-bindings/zmk/dynamic-macros.h>

#define DEFAULT 0
#define NAV     1
#define FN      2
#define NUM     3

&mt {
    quick-tap-ms = <100>;
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
};

&lt {
    quick-tap-ms = <100>;
    tapping-term-ms = <200>;
};

/ {
    behaviors {
        pht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <1>;    // <---[[the W key]]
            };
       rpi: require_prior_idle {
         compatible = "zmk,behavior-hold-tap";
         #binding-cells = <2>;
         flavor = "tap-preferred";
         tapping-term-ms = <200>;
         quick-tap-ms = <200>;
         require-prior-idle-ms = <125>;
         bindings = <&kp>, <&kp>;
         };

      td_sp: tap_dance_mod_tap_spc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt NAV SPACE>, <&kp SPACE>;
        };

      td_bs: tap_dance_mod_tap_bs {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt NAV BSPC>, <&kp BSPC>;
        };

      td_dl: tap_dance_mod_tap_del {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt FN DEL>, <&kp DEL>;
        };
    };
};

&sk {
    release-after-ms = <2000>;
    quick-release;

    /delete-property/ ignore-modifiers;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_grave {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        combo_capslock {
            bindings = <&caps_word>;
            key-positions = <23 26>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        combo_hyphen {
            bindings = <&kp MINUS>;
            key-positions = <8 9>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        combo_equals {
            bindings = <&kp EQUAL>;
            key-positions = <18 19>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        combo_backslash {
            bindings = <&kp BSLH>;
            key-positions = <38 39>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        combo_rcd {
            bindings = <&rcd_macro>;
            key-positions = <12 13>;
            require-prior-idle-ms = <25>;
        };

        combo_rtc {
            bindings = <&rtc_macro>;
            key-positions = <13 14>;
            require-prior-idle-ms = <25>;
        };

        open_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <43 44>;
            require-prior-idle-ms = <100>;
        };

        close_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <45 46>;
            require-prior-idle-ms = <100>;
        };

        open_brkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <42 43>;
            require-prior-idle-ms = <100>;
        };

        close_brkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <46 47>;
            require-prior-idle-ms = <100>;
        };

        wes_combo {
            bindings = <&wes_macro>;
            key-positions = <11 12>;
            require-prior-idle-ms = <25>;
        };
        cdr_combo {
            bindings = <&cdr_macro>;
            key-positions = <32 33>;
            require-prior-idle-ms = <25>;
        };
    };
};

/ {
    macros {
        rcd_macro: rcd_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp I &kp T &kp C &kp H &kp I &kp E &kp UNDER &kp C &kp H &kp R &kp I &kp S &kp T &kp I &kp A &kp N &kp UNDER &kp D &kp AT &kp C &kp A &kp T &kp DOT &kp C &kp O &kp M>;
            label = "RCD_MACRO";
            wait-ms = <10>;
            tap-ms = <10>;
        };
        rtc_macro: rtc_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp I &kp T &kp C &kp H &kp C &kp D>;
            label = "RTC_MACRO";
            wait-ms = <10>;
            tap-ms = <10>;
        };
        wes_macro: wes_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp E &kp DOT &kp E &kp A &kp T &kp DOT &kp S &kp P &kp A &kp M &kp A &kp L &kp O &kp T &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "WES_MACRO";
            wait-ms = <10>;
            tap-ms = <10>;
        };
        cdr_macro: cdr_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp H &kp R &kp I &kp S &kp T &kp I &kp A &kp N &kp DOT &kp D &kp DOT &kp R &kp I &kp T &kp C &kp H &kp I &kp E &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "CDR_MACRO";
            wait-ms = <10>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------------------
            // | 1     | 2    | 3    | 4   | 5   |                               | 6   | 7   | 8   | 9   | 0   |
            // | Q     | W    | E    | R   | T   |                               | Y   | U   | I   | O   | P   |
            // | A     | S    | D    | F   | G   |                               | H   | J   | K   | L   | ;   |
            // | Z     | X    | C    | V   | B   |  C/A/D  |            |  MUTE  | N   | M   | ,   | .   | /   |
            //                     | FN/ESC|NAV/SPACE|NUM/TAB|      |NUM/ENTER|NAV/BSPACE|FN/DEL |

            bindings = <
//╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮                                     ╭──────────────┬──────────────┬──────────────┬──────────────┬─────────────────────╮
   &rpi LS(N1) N1 &rpi LS(N2) N2 &rpi LS(N3) N3 &rpi LS(N4) N4 &rpi LS(N5) N5                                       &rpi LS(N6) N6 &rpi LS(N7) N7 &rpi LS(N8) N8 &rpi LS(N9) N9     &rpi LS(N0) N0
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼─────────────────────┤ 
    &kp Q          &kp W          &kp E           &kp R           &kp T                                             &kp Y          &kp U          &kp I            &kp O              &rpi PSCRN P
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼─────────────────────┤ 
    &kp A          &mt LALT S     &mt LCTRL D     &mt LSHFT F     &kp G                                             &kp H          &mt RSHFT J    &mt RCTRL K      &mt RALT L         &mt LGUI SQT
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼─────────────────╮ ╭─────────────────┼──────────────┼──────────────┼──────────────┼──────────────┼─────────────────────┤ 
    &rpi LC(Z) Z   &rpi LC(X) X   &rpi LC(C) C    &rpi LC(V) V    &kp B        &kp LC(LA(DEL))     &kp C_MUTE       &kp N          &kp M         &rpi SEMI COMMA &rpi LS(SEMI) DOT &rpi LS(FSLH) FSLH
//╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┼─────────────────┤ ├─────────────────┼──────────────┼──────────────┼──────────────┴──────────────┴─────────────────────╯ 
                                                  &lt FN ESC      &td_sp          &lt NUM TAB      &lt NUM RET      &td_bs         &td_dl
//                                             ╰──────────────┴──────────────┴─────────────────╯ ╰─────────────────┴──────────────┴──────────────╯
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

nav_layer {
            bindings = <
//╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮                                     ╭──────────────┬──────────────┬──────────────┬──────────────┬─────────────────────╮
    &trans          &trans          &trans          &trans          &trans                                             &trans         &kp HOME      &kp INS       &kp PG_UP      &trans
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼─────────────────────┤ 
    &trans          &trans          &trans          &trans          &trans                                             &trans         &kp END       &kp UP        &kp PG_DN      &trans
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼─────────────────────┤ 
    &trans          &trans          &trans          &trans          &trans                                             &kp PSCRN      &kp LEFT      &kp DOWN      &kp RIGHT      &trans
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼─────────────────╮ ╭─────────────────┼──────────────┼──────────────┼──────────────┼──────────────┼─────────────────────┤ 
    &trans          &trans          &trans          &trans          &trans      &trans              &tog NUM           &trans         &trans        &kp DOWN      &trans         &trans
//╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┼─────────────────┤ ├─────────────────┼──────────────┼──────────────┼──────────────┴──────────────┴─────────────────────╯ 
                                                   &trans          &trans          &trans              &trans           &trans         &trans
//                                             ╰──────────────┴──────────────┴─────────────────╯ ╰─────────────────┴──────────────┴──────────────╯
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

num_layer {
            bindings = <
//╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮                                     ╭──────────────┬──────────────┬──────────────┬──────────────┬─────────────────────╮
        &trans        &trans        &trans        &trans        &trans                                                  &trans       &kp KP_EQUAL   &kp LS(N9)      &kp LS(N0)    &kp KP_SLASH
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼─────────────────────┤ 
    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4                                            &trans       &kp KP_N7      &kp KP_N8       &kp KP_N9     &kp KP_MINUS
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼─────────────────────┤ 
        &trans        &trans        &trans        &trans        &trans                                                  &trans       &kp KP_N4      &kp KP_N5       &kp KP_N6     &kp KP_PLUS
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼─────────────────╮ ╭─────────────────┼──────────────┼──────────────┼──────────────┼──────────────┼─────────────────────┤ 
      &bt BT_CLR        &trans        &trans        &trans        &trans           &trans          &trans               &trans       &kp KP_N1      &kp KP_N2       &kp KP_N3     &kp KP_ASTERISK
//╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┼─────────────────┤ ├─────────────────┼──────────────┼──────────────┼──────────────┴──────────────┴─────────────────────╯ 
                                                   &trans        &trans            &trans          &kp KP_N0          &kp KP_DOT    &kp KP_ENTER
//                                             ╰──────────────┴──────────────┴─────────────────╯ ╰─────────────────┴──────────────┴──────────────╯
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp UP DOWN >;
         };

fn_layer {
            bindings = <
//╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮                                     ╭──────────────┬──────────────┬──────────────┬──────────────┬─────────────────╮
        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                                    &kp F6      &kp F7          &kp F8        &kp F9       &kp F10
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼─────────────────┤ 
    &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                                               &trans      &bt BT_CLR  &bt BT_PRV      &bt BT_NXT      &trans
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤                                     ├──────────────┼──────────────┼──────────────┼──────────────┼─────────────────┤ 
    &out OUT_TOG      &trans        &trans        &trans        &sys_reset                                            &sys_reset      &trans          &trans          &trans      &trans
//├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┼─────────────────╮ ╭─────────────────┼──────────────┼──────────────┼──────────────┼──────────────┼─────────────────┤ 
    &bt BT_CLR        &trans        &trans        &trans          &trans        &bootloader           &bootloader       &trans      &trans          &trans          &trans        &studio_unlock
//╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┼─────────────────┤ ├─────────────────┼──────────────┼──────────────┼──────────────┴──────────────┴─────────────────╯ 
                                                  &trans            &trans        &trans                &kp C_PREV    &kp C_NEXT      &trans
//                                             ╰──────────────┴──────────────┴─────────────────╯ ╰─────────────────┴──────────────┴──────────────╯
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp UP DOWN>;
        };
 extra1 {
            status = "reserved";
        };
 extra2 {
            status = "reserved";
        };
    };
};
// disable qspi flash for more power saving
&qspi { 
      status = "disabled"; 
      };
